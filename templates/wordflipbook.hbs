 <style>
    /* Basic resets */
    body {
      margin: 0;
      padding: 0;
      background-color: #f8f8f8;
      font-family: Arial, sans-serif;
    }

    /* Back button */
    .back-btn {
      display: inline-flex;
      align-items: center;
      background-color: #f8f9fa;
      color: #333;
      border: none;
      padding: 8px 8px;
      font-size: 16px;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.2s ease;
      font-weight: bold;
      margin-bottom: 20px;
    }
    .back-btn:hover {
      background-color: #e0e0e0;
      transform: translateX(-3px);
    }
    .back-btn::before {
      content: "⮐";
      margin-right: 8px;
      font-size: 18px;
    }

    .header-container {
    background-color: #FF7878;
    text-align: center;
    padding: 20px;
    border-radius: 20px;
    width: 80%;
    max-width: 600px;
    margin: 25px auto 50px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  
  /* Wrap h6 and button together */
  .header-text {
    display: flex;
    align-items: center;
    gap: 2px; /* Space between h6 and button */
  }
  
  /* Ensure the button is aligned properly */
  #info-button {
    background: none;
    border: none;
    width: 20px;  /* Adjust size */
    height: 20px;
    padding: 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Resize the button image */
  #info-button img {
    width: 100%;
    height: 100%;
    margin-left: 5px;
    margin-top: 2px;
  }
  
  /* Modal Styling */
  /* Ensure modal is hidden by default */
  .modal {
    display: none; /* Hide modal initially */
    position: fixed; /* Stay in place */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #FF7878; /* Set modal background color */
    color: white; /* White text */
    padding: 20px;
    border-radius: 10px;
    width: 350px; /* Set modal width */
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3); /* Optional shadow */
    z-index: 1000; /* Ensure it's above other content */
  }
  
  /* Close button styling */
  .modal .close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 20px;
    cursor: pointer;
  }
  
  .modal-content {
    background-color: #FF7878;
    color: white;
    padding: 20px;
    border-radius: 10px;
    width: 100%; /* Ensure it takes full width inside modal */
    max-width: 400px; /* Limit max width */
    text-align: center;
    position: relative;
    box-sizing: border-box; /* Prevents padding from affecting width */
  }
  
  /* Close button */
  .modal-content .close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 24px;
    cursor: pointer;
    color: white;
  }
  
  .modal-content .close:hover {
    color: #fff2f2;
  }

.header-container h1 {
    font-weight: bold;
    color: white;
    margin-bottom: 5px;
}

.header-container h6 {
    font-style: italic;
    opacity: 0.75;
    margin: 5px 0 0;
    color: white;
}

.modal-content h6 {
  color: white;
  font-style: italic;
  opacity: 0.75;
}

    /* Main container */
    .flipbook-container {
      margin: 20px auto;
      text-align: center;
      max-width: 800px; /* Adjust if needed */
      width: 90%;
    }

    /* Each "page" is wrapped in .flipbook-page so we can toggle them */
    .flipbook-page {
      display: none; /* hidden by default */
    }
    .flipbook-page.active {
      display: block;
    }

    /* The row that shows the open-book background */
    .word-row {
      position: relative;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      margin: 40px 0;
      padding: 120px 20px 60px;
      background: url("wordflipbook-Background.png") no-repeat center top;
      background-size: contain;
    }

    .word-column {
      text-align: center;
      margin: 0 30px; /* spacing between columns */
    }

    .button-container {
      margin: 10px 0;
    }

    .phonetics {
      color: #002769;
      font-style: italic;
    }

    .play-sound,
    .record-sound,
    .play-recording {
      cursor: pointer;
      margin: 0 5px;
      border-radius: 5px;
      padding: 5px;
      background-color: #ffffff;
    }

    .play-sound:hover {
      background-color: #e0e0e0;
    }
    .record-sound:hover {
      background-color: #e0e0e0;
    }
    .play-recording:hover {
      background-color: #e0e0e0;
    }

    .right-arrow {
      display: block;
      margin-top: 25px;
      margin-left: auto;
      margin-right: auto;
      cursor: pointer;
    }

    .left-arrow {
      display: block;
      margin-top: 25px;
      margin-left: auto;
      margin-right: auto;
      cursor: pointer;
    }

    .left-arrow-container{
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .custom-modal-overlay {
      display: none; /* hidden by default */
      position: fixed;
      z-index: 999; /* on top of everything */
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.6); /* semi-transparent dark overlay */
  }
  .custom-modal {
      background-color: #fff;
      width: 300px; /* adjust as needed */
      margin: 15% auto; /* center vertically */
      padding: 20px;
      border-radius: 10px;
      text-align: center;
      position: relative;
      box-shadow: 0 0 10px rgba(0,0,0,0.3);
  }
  .custom-modal h2 {
      margin-top: 0;
      color: #2c3e50;
  }
  .custom-modal p {
      color: #333;
      margin-bottom: 20px;
  }
  .close-button {
      background: none;
      border: none;
      color: #333;
      font-size: 24px;
      position: absolute;
      right: 15px;
      top: 15px;
      cursor: pointer;
  }
  .modal-ok-button {
      background-color: #df1645;
      color: #fff;
      border: none;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
      font-size: 14px;
  }
  .modal-ok-button:hover {
      background-color: #ff003c;
  }

  </style>

  <!-- Back Button -->
  <button onclick="loadPage('dysarthriagameselection')" class="back-btn">Back to Dysarthria Unit</button>

  <div class="header-container">
    <h1>Dysarthria Unit - Word Flipbook</h1>
    <div class="header-text">
        <h6><i>Practice Sound Daily!</i></h6>
        <button id="info-button">
            <img src="information-button.png" alt="Info">
        </button>
    </div>
</div>

  <!-- Flipbook Container -->
  <div class="flipbook-container">

    <!-- PAGE 1 -->
    <div class="flipbook-page active" id="page-1">
      <div class="word-row">
        <!-- Column 1 -->
        <div class="word-column">
          <h1 id="ma-word">"Ma"</h1>
          <div class="button-container">
            <img src="playsound-button.png" alt="Play Sound" class="play-sound" data-word="ma">
            <img src="recordsound-button.png" alt="Record Sound" class="record-sound" data-word="ma">
            <img src="playrecording-button.png" alt="Play Recording" class="play-recording" data-word="ma">
          </div>
          <h4 class="phonetics" id="ma-phonetics" title="Phonetics">/mɑː/</h4>
        </div>

        <!-- Column 2 -->
        <div class="word-column">
          <h1 id="pa-word">"Pa"</h1>
          <div class="button-container">
            <img src="playsound-button.png" alt="Play Sound" class="play-sound" data-word="pa">
            <img src="recordsound-button.png" alt="Record Sound" class="record-sound" data-word="pa">
            <img src="playrecording-button.png" alt="Play Recording" class="play-recording" data-word="pa">
          </div>
          <h4 class="phonetics" id="pa-phonetics" title="Phonetics">/pɑː/</h4>
        </div>

        <!-- Column 3 -->
        <div class="word-column">
          <h1 id="nee-word">"Nee"</h1>
          <div class="button-container">
            <img src="playsound-button.png" alt="Play Sound" class="play-sound" data-word="nee">
            <img src="recordsound-button.png" alt="Record Sound" class="record-sound" data-word="nee">
            <img src="playrecording-button.png" alt="Play Recording" class="play-recording" data-word="nee">
          </div>
          <h4 class="phonetics" id="nee-phonetics" title="Phonetics">/niː/</h4>
          <!-- Right arrow to go to the next page -->
          <img src="rightArrow-button.png" alt="Right Arrow" class="right-arrow" id="right-arrow-page1">
        </div>
      </div>
    </div>

    <!-- PAGE 2 -->
    <div class="flipbook-page" id="page-2">
      <div class="word-row">
        <!-- Column 1 -->
        <div class="word-column">
          <h1 id="bye-word">"Bye"</h1>
          <div class="button-container">
            <img src="playsound-button.png" alt="Play Sound" class="play-sound" data-word="bye">
            <img src="recordsound-button.png" alt="Record Sound" class="record-sound" data-word="bye">
            <img src="playrecording-button.png" alt="Play Recording" class="play-recording" data-word="bye">
          </div>
          <h4 class="phonetics" id="bye-phonetics" title="Phonetics">/baɪ/</h4>
          <!-- Left arrow to go back to Page 1 -->
          <img src="leftArrow-button.png" alt="Left Arrow" class="left-arrow" id="left-arrow-page2">
        </div>

        <!-- Column 2 -->
        <div class="word-column">
          <h1 id="toe-word">"Toe"</h1>
          <div class="button-container">
            <img src="playsound-button.png" alt="Play Sound" class="play-sound" data-word="toe">
            <img src="recordsound-button.png" alt="Record Sound" class="record-sound" data-word="toe">
            <img src="playrecording-button.png" alt="Play Recording" class="play-recording" data-word="toe">
          </div>
          <h4 class="phonetics" id="toe-phonetics" title="Phonetics">/toʊ/</h4>
        </div>

        <!-- Column 3 -->
        <div class="word-column">
          <h1 id="key-word">"Key"</h1>
          <div class="button-container">
            <img src="playsound-button.png" alt="Play Sound" class="play-sound" data-word="key">
            <img src="recordsound-button.png" alt="Record Sound" class="record-sound" data-word="key">
            <img src="playrecording-button.png" alt="Play Recording" class="play-recording" data-word="key">
          </div>
          <h4 class="phonetics" id="key-phonetics" title="Phonetics">/kiː/</h4>
          <!-- Right arrow (if you want a page 3, uncomment the goToPage(3) line, etc.) -->
          <!-- <img src="rightArrow-button.png" alt="Right Arrow" class="right-arrow" onclick="goToPage(3)"> -->
        </div>
      </div>
    </div>
    
  </div>

      <!-- Custom Modal (for styled alerts) -->
<div id="customModalOverlay" class="custom-modal-overlay">
  <div class="custom-modal">
    <button class="close-button" onclick="closeWordFlipBookModal()">&times;</button>
    <h2 id="modalTitle">Modal Title</h2>
    <br>
    <p id="modalMessage">Modal message goes here.</p>
    <button class="modal-ok-button" onclick="closeWordFlipBookModal()">OK</button>
  </div>
</div>

<!-- Info Modal -->
    <div id="info-modal" class="modal">
        <div class="modal-content">
          <span class="close">&times;</span>
          <p><em>
            Listen closely to your own speech as you turn the pages in this Word Flibook, 
            say each word carefully and try to improve your clarity with each repetition. 
            Self-monitoring and articulation are helpful for a debilitating condition such as Dysarthria.
          </em></p>
          <h6>
            Click the speaker to hear how each word is pronounced<br>
            Click the microphone to practice each chosen word<br>
            Click the playback to play back <strong>your</strong> spoken word
          </h6>
        </div>
      </div>



  <script>
      // ====== Show & Hide Custom Modal ======
  function showModal(title, message) {
    document.getElementById("modalTitle").innerText = title;
    document.getElementById("modalMessage").innerText = message;
    document.getElementById("customModalOverlay").style.display = "block";
  }
  function closeWordFlipBookModal() {
    document.getElementById("customModalOverlay").style.display = "none";
  }

    // --------------------------------
    // 1. AUDIO PLAY/RECORD FUNCTIONALITY
    // --------------------------------
    const playSounds = document.querySelectorAll('.play-sound');
    const recordSounds = document.querySelectorAll('.record-sound');
    const playRecordings = document.querySelectorAll('.play-recording');

    let mediaRecorder;
    let audioChunks = [];
    let audioURLs = {};
    let recordingTimeout;
    let isRecording = false;

    playSounds.forEach(button => {
      button.addEventListener('click', () => {
        const word = button.dataset.word;
        let audioSrc = '';

        if (word === 'ma') {
          audioSrc = 'ma-wordflipbookSound.mp3';
        } else if (word === 'pa') {
          audioSrc = 'pa-wordflipbookSound.mp3';
        } else if (word === 'nee') {
          audioSrc = 'nee-wordflipbookSound.mp3';
        } else if (word === 'bye') {
          audioSrc = 'bye-wordflipbookSound.mp3';
        } else if (word === 'toe') {
          audioSrc = 'toe-wordflipbookSound.mp3';
        } else if (word === 'key') {
          audioSrc = 'key-wordflipbookSound.mp3';
        }

        if (audioSrc) {
          console.log(`Playing sound: ${word}`);
          const audio = new Audio(audioSrc);
          audio.play();
        } else {
          console.error(`Audio source not found for ${word}`);
        }
      });
    });

    recordSounds.forEach(button => {
      button.addEventListener('click', async () => {
        const word = button.dataset.word;

        // If currently recording, stop it:
        if (isRecording && mediaRecorder && mediaRecorder.state === "recording") {
          mediaRecorder.stop();
          isRecording = false;
          return;
        }

        showModal(`Start Recording for: ${word}`, "You can now speak to record your voice!");

        try {
          const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
          mediaRecorder = new MediaRecorder(stream);
          audioChunks = [];

          mediaRecorder.ondataavailable = event => {
            audioChunks.push(event.data);
          };

          mediaRecorder.onstop = () => {
            const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
            const audioUrl = URL.createObjectURL(audioBlob);
            audioURLs[word] = audioUrl;
            console.log(`Finish Recording for: ${word}`);
            clearTimeout(recordingTimeout);
            isRecording = false;
          };

          mediaRecorder.start();
          isRecording = true;

          // Auto-stop after 3 seconds
          recordingTimeout = setTimeout(() => {
            if (mediaRecorder.state === "recording") {
              mediaRecorder.stop();
            }
          }, 3000);

        } catch (error) {
          console.error('Error accessing microphone:', error);
          isRecording = false;
        }
      });
    });

    playRecordings.forEach(button => {
      button.addEventListener('click', () => {
        const word = button.dataset.word;
        const audioUrl = audioURLs[word];

        if (audioUrl) {
          console.log(`Playing recording for: ${word}`);
          const audio = new Audio(audioUrl);
          audio.play();
        } else {
          showModal(`No recording found for ${word}`, "Please record first!");
        }
      });
    });

    // --------------------------------
    // 2. PAGE FLIP FUNCTIONALITY
    // --------------------------------

    // Helper function to show a specific page by ID
    function showPage(pageId) {
      // Hide all pages
      document.querySelectorAll('.flipbook-page').forEach(page => {
        page.classList.remove('active');
      });
      // Show the desired page
      const target = document.getElementById(pageId);
      if (target) target.classList.add('active');
    }

    // Arrow on Page 1 (go to Page 2)
    const rightArrowPage1 = document.getElementById('right-arrow-page1');
    rightArrowPage1.addEventListener('click', () => {
      showPage('page-2');
    });

    // Arrow on Page 2 (go back to Page 1)
    const leftArrowPage2 = document.getElementById('left-arrow-page2');
    leftArrowPage2.addEventListener('click', () => {
      showPage('page-1');
    });

    // For your "Back to Dysarthria Unit" button:
    function loadPage(pageName) {
      // Insert your own routing logic here (window.location, or any other method)
      window.location.href = pageName + '.html';
    }

    const modal = document.getElementById("info-modal");
    const btn = document.getElementById("info-button");
    const close = document.querySelector(".modal .close");
  
    // Make sure modal is hidden initially
    modal.style.display = "none";
  
    btn.addEventListener("click", () => {
      modal.style.display = "block"; // Show modal when button is clicked
    });
  
    close.addEventListener("click", () => {
      modal.style.display = "none"; // Close modal when X is clicked
    });
  
    window.addEventListener("click", (event) => {
      if (event.target === modal) {
        modal.style.display = "none"; // Close modal if user clicks outside of it
      }
    });

  </script>