<style>
  /* Back Button */
  .back-btn {
    display: flex;
    align-items: center;
    background-color: #f8f9fa;
    color: #333;
    border: none;
    padding: 8px 8px;
    font-size: 16px;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
    font-weight: bold;
    margin-bottom: 20px;
  }
  .back-btn:hover {
    background-color: #e0e0e0;
    transform: translateX(-3px);
  }
  .back-btn::before {
    content: "‚Æê";
    margin-right: 8px;
    font-size: 18px;
  }

  /* Adjust header container to align items */
.header-container {
  background-color: #FF7878;
  text-align: center;
  padding: 20px;
  border-radius: 20px;
  width: 80%;
  max-width: 600px;
  margin: 25px auto 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Wrap h6 and button together */
.header-text {
  display: flex;
  align-items: center;
  gap: 2px; /* Space between h6 and button */
}

/* Ensure the button is aligned properly */
#info-button {
  background: none;
  border: none;
  width: 20px;  /* Adjust size */
  height: 20px;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 5px;
}

/* Resize the button image */
#info-button img {
  width: 100%;
  height: 100%;
}

/* Modal Styling */
/* Ensure modal is hidden by default */
.modal {
  display: none; /* Hide modal initially */
  position: fixed; /* Stay in place */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #FF7878; /* Set modal background color */
  color: white; /* White text */
  padding: 20px;
  border-radius: 10px;
  width: 350px; /* Set modal width */
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3); /* Optional shadow */
  z-index: 1000; /* Ensure it's above other content */
}

/* Close button styling */
.modal .close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 20px;
  cursor: pointer;
}

.modal-content {
  background-color: #FF7878;
  color: white;
  padding: 20px;
  border-radius: 10px;
  width: 100%; /* Ensure it takes full width inside modal */
  max-width: 400px; /* Limit max width */
  text-align: center;
  position: relative;
  box-sizing: border-box; /* Prevents padding from affecting width */
}

/* Close button */
.modal-content .close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 24px;
  cursor: pointer;
  color: white;
}

.modal-content .close:hover {
  color: #fff2f2;
}

h1 {
  color: white;
  margin: 0;
}

h6 {
  color: white;
  font-style: italic;
  opacity: 0.75;
  margin: 5px 0 0;
}

  /* Game Container */
  .game-container {
    max-width: 600px;
    width: 100%;
    padding: 20px;
    margin: 0 auto;
    background: white;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  /* Animal Rows */
  .animal {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px;
    margin-bottom: 40px;
  }
  .animal img {
    width: 50px;
    height: 50px;
  }

  /* Buttons */
  button.play-sound,
  button.record-sound,
  button.play-recording {
    background-color: #ffffff;
    color: white;
    border: none;
    border-radius: 5px;
    margin: 5px;
    padding: 8px;
    font-size: 14px;
    cursor: pointer;
  }

  button.play-sound:hover {
    background-color: #e0e0e0;
  }
  button.record-sound:hover {
    background-color: #e0e0e0;
  }
  button.play-recording:hover {
    background-color: #e0e0e0;
  }

  .custom-modal-overlay {
      display: none; /* hidden by default */
      position: fixed;
      z-index: 999; /* on top of everything */
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.6); /* semi-transparent dark overlay */
  }
  .custom-modal {
      background-color: #fff;
      width: 300px; /* adjust as needed */
      margin: 15% auto; /* center vertically */
      padding: 20px;
      border-radius: 10px;
      text-align: center;
      position: relative;
      box-shadow: 0 0 10px rgba(0,0,0,0.3);
  }
  .custom-modal h2 {
      margin-top: 0;
      color: #2c3e50;
  }
  .custom-modal p {
      color: #333;
      margin-bottom: 20px;
  }
  .close-button {
      background: none;
      border: none;
      color: #333;
      font-size: 24px;
      position: absolute;
      right: 15px;
      top: 15px;
      cursor: pointer;
  }
  .modal-ok-button {
      background-color: #df1645;
      color: #fff;
      border: none;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
      font-size: 14px;
  }
  .modal-ok-button:hover {
      background-color: #ff003c;
  }

</style>

<!-- Partial content only (no <html>, <head>, <body>) -->
<button onclick="loadPage('apraxiagameselection')" class="back-btn">
  Back to Apraxia Unit
</button>

<div class="header-container">
    <h1>Apraxia Unit - Animal Sounds</h1>
    <div class="header-text">
      <h6>Boost Speech Clarity with Fun Animal Sounds</h6>
      <button id="info-button">
        <img src="information-button.png" alt="Info">
      </button>
    </div>
  </div> 

<div class="game-container">
  <!-- CAT -->
  <div class="animal" id="cat">
    <img src="cat-icon.png" alt="Cat">
    <button class="play-sound" data-sound="cat-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="cat">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="cat" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- DOG -->
  <div class="animal" id="dog">
    <img src="dog-icon.png" alt="Dog">
    <button class="play-sound" data-sound="dog-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="dog">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="dog" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- BIRD -->
  <div class="animal" id="bird">
    <img src="bird-icon.png" alt="Bird">
    <button class="play-sound" data-sound="bird-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="bird">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="bird" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- ELEPHANT -->
  <div class="animal" id="elephant">
    <img src="elephant-icon.png" alt="Elephant">
    <button class="play-sound" data-sound="elephant-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="elephant">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="elephant" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- HORSE -->
  <div class="animal" id="horse">
    <img src="horse-icon.png" alt="Horse">
    <button class="play-sound" data-sound="horse-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="horse">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="horse" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- DUCK -->
  <div class="animal" id="duck">
    <img src="duck-icon.png" alt="Duck">
    <button class="play-sound" data-sound="duck-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="duck">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="duck" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>
</div>

    <!-- Custom Modal (for styled alerts) -->
<div id="customModalOverlay" class="custom-modal-overlay">
  <div class="custom-modal">
    <button class="close-button" onclick="closeModal()">&times;</button>
    <h2 id="modalTitle">Modal Title</h2>
    <br>
    <p id="modalMessage">Modal message goes here.</p>
    <button class="modal-ok-button" onclick="closeModal()">OK</button>
  </div>
</div>

 <!-- Info Modal -->
    <div id="info-modal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <p><em>
          This Animal Sounds game helps with Apraxia by practicing motor planning for speech. 
          Imitating Animal Sounds helps focus on specific mouth movements and sound formations. 
          It's a fun way to strengthen the muscles and coordination needed for clear speech!
        </em></p>
        <h6>
          Click the speaker to hear Animal Sounds<br>
          Click the microphone to imitate your chosen Animal Sounds<br>
          Click the playback to hear <strong>your</strong> Animal Sounds
        </h6>
      </div>
    </div>

<script>

    // ====== Show & Hide Custom Modal ======
  function showModal(title, message) {
    document.getElementById("modalTitle").innerText = title;
    document.getElementById("modalMessage").innerText = message;
    document.getElementById("customModalOverlay").style.display = "block";
  }
  function closeModal() {
    document.getElementById("customModalOverlay").style.display = "none";
  }
  
  function startGameAnimalSounds(){

  console.log("animalsounds-script.js loaded!");

// Immediately attach event listeners
document.querySelectorAll(".play-sound").forEach((button) => {
  button.addEventListener("click", () => {
    const soundPath = button.dataset.sound;
    console.log(`Attempting to play: ${soundPath}`);
    const sound = new Audio(soundPath);
    sound
      .play()
      .then(() => {
        console.log(`Playing sound: ${soundPath}`);
      })
      .catch((error) => {
        console.error(`Error playing sound: ${soundPath}`, error);
      });
  });
});

const recordings = new Map();

document.querySelectorAll(".animal").forEach((animalDiv) => {
  const recordButton = animalDiv.querySelector(".record-sound");
  const playButton = animalDiv.querySelector(".play-recording");
  const animal = recordButton.dataset.animal;

  recordButton.addEventListener("click", async () => {
    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
      alert("Microphone access is not supported in your browser.");
      return;
    }
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
      const mediaRecorder = new MediaRecorder(stream);
      const chunks = [];

      mediaRecorder.ondataavailable = (e) => chunks.push(e.data);
      mediaRecorder.onstop = () => {
        const audioBlob = new Blob(chunks, { type: "audio/wav" });
        const audioUrl = URL.createObjectURL(audioBlob);
        recordings.set(animal, audioUrl);
        playButton.disabled = false;
        console.log(`Recording saved for ${animal}.`);
      };

      mediaRecorder.start();
      showModal(`Recording started for ${animal}.`, "You can now speak to record your voice!");

      setTimeout(() => {
        mediaRecorder.stop();
        stream.getTracks().forEach((track) => track.stop());
        console.log(`Recording stopped for ${animal}.`);
      }, 3000);
    } catch (error) {
      console.error(`Error recording for ${animal}:`, error);
      alert("Could not access your microphone. Please check permissions.");
    }
  });

  playButton.addEventListener("click", () => {
    if (recordings.has(animal)) {
      const audio = new Audio(recordings.get(animal));
      audio.play();
    } else {
      showModal(`No recording available for ${animal}.`, "Please record first!");
    }
  });
});

// Modal Functionality
// Ensure modal only opens when clicked
  const modal = document.getElementById("info-modal");
  const btn = document.getElementById("info-button");
  const close = document.querySelector(".modal .close");

  // Make sure modal is hidden initially
  modal.style.display = "none";

  btn.addEventListener("click", () => {
    modal.style.display = "block"; // Show modal when button is clicked
  });

  close.addEventListener("click", () => {
    modal.style.display = "none"; // Close modal when X is clicked
  });

  window.addEventListener("click", (event) => {
    if (event.target === modal) {
      modal.style.display = "none"; // Close modal if user clicks outside of it
    }
  });
  
}
</script>
